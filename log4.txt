
======== ThreadID: 4 ========
ExecutionStack:
string varf;
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
string varf;
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
string varf;
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> 

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> 

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> 

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
varf = test.in;
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> 

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
openRead(varf);
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
int varc;
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 0

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 0

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 0

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 0

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
readFile(varf);
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 15

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
print(varc);
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15
50

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:
closeRead(varf);

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15
50

FileTable:
test.in

HeapTable:


======== ThreadID: 4 ========
ExecutionStack:

SymbolTable:
varf -> test.in
varc -> 50

OutputTable:
15
50

FileTable:

HeapTable:

